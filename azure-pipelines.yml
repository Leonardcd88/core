# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Lint'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r requirements_all.txt -r requirements_test.txt -c homeassistant/package_constraints.txt
    displayName: 'Install dependencies'

  - script: |
      python script/gen_requirements_all.py validate
      flake8
      pydocstyle tests
      pylint homeassistant
    displayName: 'lint'

- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r requirements_test_all.txt -c homeassistant/package_constraints.txt
    displayName: 'Install dependencies'

  - script: |
      pytest tests
    displayName: 'pytest'

  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFiles: '**/test-results.xml'
  #     testRunTitle: 'Python $(python.version)'
  #   condition: succeededOrFailed()

- job: 'Publish'
  dependsOn: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install wheel
    displayName: 'Install dependencies'

  - script: python setup.py sdist
    displayName: 'Build sdist'
